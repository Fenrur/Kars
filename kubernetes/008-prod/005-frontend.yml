apiVersion: v1
kind: Service
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
    app.quarkus.io/vcs-uri: https://github.com/Fenrur/kars.git
  labels:
    app.kubernetes.io/name: kars-frontend
  name: kars-frontend
  namespace: prod
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: kars-frontend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
    app.quarkus.io/vcs-uri: https://github.com/Fenrur/kars.git
  labels:
    app.kubernetes.io/name: kars-frontend
  name: kars-frontend
  namespace: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kars-frontend
  template:
    metadata:
      annotations:
        reloader.stakater.com/auto: "true"
        app.quarkus.io/vcs-uri: https://github.com/Fenrur/kars.git
      labels:
        app.kubernetes.io/name: kars-frontend
      namespace: prod
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PORT
              value: "8080"
            - name: BACKEND_URL
              value: https://api.kars.tinnirello-livio.me
          image: ghcr.io/fenrur/kars/kars-frontend:1.0.0
          imagePullPolicy: Always
          name: kars-frontend
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 64Mi
      imagePullSecrets:
        - name: ghcr